import Head from 'next/head'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import { Canvas, useFrame } from '@react-three/fiber'
import { Fragment, Suspense, useEffect, useRef } from 'react'
import CameraScroll from '@/components/CameraScroll'
import { gsap } from 'gsap'
import Layout from '@/components/Layout'
import { CAMERA_DIST } from '@/utils/variables'
import { PerspectiveCamera } from '@react-three/drei'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const ref = useRef()
  const resolution = useRef()
  const fov = useRef()
  const containerText = useRef()

  useEffect(() => {
    fov.current =
      2 * Math.atan(window.innerHeight / (2 * CAMERA_DIST)) * (180 / Math.PI)
    resolution.current = window.innerWidth / window.innerHeight
    gsap.to(ref.current, {
      x: '+=40',
      ease: 'none',
      scrollTrigger: {
        trigger: '.scroll--right',
        start: 'top top',
        end: 'bottom bottom',
        scrub: true,
      },
    })
  }, [])
  return (
    <Fragment>
      <Head>
        <title>Codematica</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <body>
        <main className={styles.main}>
          <Canvas dpr={[1, 2]}>
            <PerspectiveCamera
              makeDefault
              resolution={resolution.current}
              fov={fov.current}
              near={0.001}
              far={1000}
              position={[0, 0, 10]}
            />
            <Suspense fallback={null}>
              <Layout />
              <CameraScroll />
            </Suspense>
          </Canvas>
        </main>
      </body>
    </Fragment>
  )
}
